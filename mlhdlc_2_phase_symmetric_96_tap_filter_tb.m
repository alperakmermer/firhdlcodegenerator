q = quantizer('fixed','floor','saturate',[16 14]);
clear mlhdlc_2_phase96_tap_filter;

Ts = 10e-6; % örnekleme periyodu 10 us, fs=100KHz
fNy = 1 / Ts / 2; % Nyquist frekansi
ns = 1000; % dizideki örnek sayisi
nf = 10; % dizide kaç farkli frekansta isaret olacagi


for i = 1:ns
freq(i) = (fNy/ns) * round(i/ns*nf)*ns/nf; % orneklerin frekansi
end

for i = 1:ns
x(i) = cos(2*pi*freq(i)*Ts*i);
end

x_in=num2hex(q,x);
x_in=hex2num(q,x_in);

x0 = x_in(1:2:end);
x1 = x_in(2:2:end);
len = length(x)/2;
y0  =zeros(1,len);
y1  =zeros(1,len);
y_out=zeros(1,2*len);

%% 16 bit 14 fraction

h=[0,0,0,0,0,0,0,0,0,0,6.10351562500000e-05,-6.10351562500000e-05,-6.10351562500000e-05,6.10351562500000e-05,0.000183105468750000,-6.10351562500000e-05,-0.000305175781250000,0.000122070312500000,0.000549316406250000,-0.000122070312500000,-0.000915527343750000,6.10351562500000e-05,0.00146484375000000,6.10351562500000e-05,-0.00225830078125000,-0.000244140625000000,0.00335693359375000,0.000671386718750000,-0.00482177734375000,-0.00134277343750000,0.00671386718750000,0.00238037109375000,-0.00921630859375000,-0.00402832031250000,0.0123901367187500,0.00640869140625000,-0.0166015625000000,-0.0100097656250000,0.0221557617187500,0.0154418945312500,-0.0300903320312500,-0.0242919921875000,0.0427246093750000,0.0405883789062500,-0.0678100585937500,-0.0817871093750000,0.155273437500000,0.443359375000000,0.443359375000000,0.155273437500000,-0.0817871093750000,-0.0678100585937500,0.0405883789062500,0.0427246093750000,-0.0242919921875000,-0.0300903320312500,0.0154418945312500,0.0221557617187500,-0.0100097656250000,-0.0166015625000000,0.00640869140625000,0.0123901367187500,-0.00402832031250000,-0.00921630859375000,0.00238037109375000,0.00671386718750000,-0.00134277343750000,-0.00482177734375000,0.000671386718750000,0.00335693359375000,-0.000244140625000000,-0.00225830078125000,6.10351562500000e-05,0.00146484375000000,6.10351562500000e-05,-0.000915527343750000,-0.000122070312500000,0.000549316406250000,0.000122070312500000,-0.000305175781250000,-6.10351562500000e-05,0.000183105468750000,6.10351562500000e-05,-6.10351562500000e-05,-6.10351562500000e-05,6.10351562500000e-05,0,0,0,0,0,0,0,0,0,0];

for ii=1:len
    % call to the design 'mlhdlc_sfir' that is targeted for hardware
    [y0(ii),y1(ii)] = mlhdlc_2_phase_symmetric_96_tap_filter(x0(ii),x1(ii),h(1),h(2),h(3),h(4),h(5),h(6),h(7),h(8),h(9),h(10),h(11),h(12),h(13),h(14),h(15),h(16),h(17),h(18),h(19),h(20),h(21),h(22),h(23),h(24),h(25),h(26),h(27),h(28),h(29),h(30),h(31),h(32),h(33),h(34),h(35),h(36),h(37),h(38),h(39),h(40),h(41),h(42),h(43),h(44),h(45),h(46),h(47),h(48));
end

for i=0 : (length(y0)-1)
    y_out(2*i+1) = y0(i+1);
    y_out(2*i+2) = y1(i+1);
end

y_orj = conv(x_in,h);

figure;
subplot(3,2,1);
plot(x_in);
title("original signal");
spec = abs(fft(x_in));
subplot(3,2,2);
plot((0:100:50e3-100),spec(1:ns/2));
title("original signal in frequency domain");

subplot(3,2,3);
plot(y_orj);
title("reference filtered signal");
spec1 = abs(fft(y_orj));
subplot(3,2,4);
plot((0:100:50e3-100),spec1(1:ns/2));
title("reference filtered signal in frequency domain");

subplot(3,2,5);
plot(y_out);
title("signal filtered with T&C");
spec2 = abs(fft(y_out));
subplot(3,2,6);
plot((0:100:50e3-100),spec2(1:ns/2));
title("signal filtered with T&C in frequency domain");